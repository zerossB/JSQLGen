/*
 * AttributeIdentityPanel.java
 *
 * Created on 19/06/2011, 15:05:04
 */
package gui;

/**
 *
 * @author marcos
 */
public class AttributeIdentityPanel extends AttributePanel {

    private AttributeForm parent;
    private project.Project projectBean;
    private project.ClassBean classBean;

    /** Creates new form AttributeIdentityPanel */
    public AttributeIdentityPanel(AttributeForm parent, project.Project projectBean, project.ClassBean classBean) {
        this.parent = parent;
        this.projectBean = projectBean;
        this.classBean = classBean;
        initComponents();
    }

    @Override
    public void setAtribute(project.Attribute attribute){
        project.AttributeIdentity attIdentity = (project.AttributeIdentity)attribute;
        tInitialValue.setText(""+attIdentity.getInitialValue());
        tIncrementValue.setText(""+attIdentity.getIncrementValue());

        //Verifica se está sendo utilizado por outras classes do projeto
        if(classBean.isUsed(projectBean)){
            Boolean useThis = false;
            java.util.List<project.ClassBean> classesUses = classBean.getClassesUses(projectBean);
            for(project.ClassBean c : classesUses){
                java.util.List<project.Attribute> atts = c.getAttributesOfType(project.Attribute.Type.OBJECT);
                for(project.Attribute att : atts){
                    project.AttributeObject attObj = (project.AttributeObject)att;
                    if(attObj.getClassRef().compareTo(classBean.getName())==0 &&
                       attObj.getAttribLookUp().compareTo(attIdentity.getName())==0){
                        useThis = true;
                    }
                }
            }
            //Se está sendo utilizado desabilita a edição dos campos
            if(useThis){
                parent.setEditable(false);
            } else {
                parent.setEditable(true);
            }
        }
    }

    @Override
    public project.AttributeIdentity getAtribute(){
        project.AttributeIdentity att = new project.AttributeIdentity();
        att.setInitialValue(Integer.parseInt(tInitialValue.getText()));
        att.setIncrementValue(Integer.parseInt(tIncrementValue.getText()));
        return att;
    }

    @Override
    public String validateForm(){
        String error = "";
        if(tInitialValue.getText().length()==0) error+= "Início da contagem\n";
        if(tIncrementValue.getText().length()==0) error+= "Incremento\n";
        return error;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pLabels = new javax.swing.JPanel();
        lInitialValue = new javax.swing.JLabel();
        lIncrementValue = new javax.swing.JLabel();
        pFields = new javax.swing.JPanel();
        tInitialValue = new javax.swing.JFormattedTextField();
        tIncrementValue = new javax.swing.JFormattedTextField();

        setLayout(new java.awt.BorderLayout(10, 0));

        pLabels.setPreferredSize(new java.awt.Dimension(150, 51));
        pLabels.setLayout(new java.awt.GridLayout(2, 0, 0, 5));

        lInitialValue.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lInitialValue.setText("Inicio da contagem");
        pLabels.add(lInitialValue);

        lIncrementValue.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lIncrementValue.setText("Incremento");
        pLabels.add(lIncrementValue);

        add(pLabels, java.awt.BorderLayout.WEST);

        pFields.setLayout(new java.awt.GridLayout(2, 0, 0, 5));

        tInitialValue.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        tInitialValue.setText("1");
        pFields.add(tInitialValue);

        tIncrementValue.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        tIncrementValue.setText("1");
        pFields.add(tIncrementValue);

        add(pFields, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lIncrementValue;
    private javax.swing.JLabel lInitialValue;
    private javax.swing.JPanel pFields;
    private javax.swing.JPanel pLabels;
    private javax.swing.JFormattedTextField tIncrementValue;
    private javax.swing.JFormattedTextField tInitialValue;
    // End of variables declaration//GEN-END:variables
}
